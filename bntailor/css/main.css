@charset "UTF-8";
/* 모든 테그의 스타일 초기화*/
/*브라우저에서 기본으로 제공하는 모든여백을 빼주는 테그*/
@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;400;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Noto+Serif+KR:wght@400;700&display=swap");
body, header, footer, div, p, nav, section, h1, h2, h3, h4, h5, h6, button, a, ol, ul, li, address, strong, span, em, i, dl, dt, dd, form, fieldset, legend, input, textarea, select, table, caption, colgroup, col, thead, tbody, tfoot, tr, th, td {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  /*width/height and padding이 결합이 되면 사이즈가 늘어남, 이걸 막는 스타일
    padding을 줘도 width/height 가 유지가됨*/
}

/*a테그에 브라우저가 주는 기본속성 초기화*/
a {
  color: inherit;
  text-decoration: none;
}

/*브라우저에서 기울임을 주는것을 초기화*/
em, address {
  font-style: normal;
}

/*항목앞에 동그라미 삭제*/
ul, ol, li {
  list-style: none;
}

/* form 테그가 문자스타일을 상속받지 않아서 강제로 상속받게 하기 */
form, input, select, textarea, button {
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
  letter-spacing: inherit;
  /*서체를 상속받아야함- button 은 body에서 
    적용한 서체를 상속받지 않음- form 관련테그는 모두다그럼*/
}

fieldset {
  border: 0;
}

legend {
  display: none; /* form 테그의 legend는 타이틀로 숨김처리 */
}

button {
  background-color: transparent; /*뒷배경이 투명하게*/
  /*none 는 background 라고 줘야한다*/
  /* background: none; */
  border: 0;
  cursor: pointer; /*마우스오버시에 손바닥모양으로 바꿔줌*/
}

table caption {
  display: none;
}

/*글자를 두껍게 하는 테그는 모두 일반 두께로 변형*/
h1, h2, h3, h4, h5, h6, strong, th {
  font-weight: 400;
}

/* 모든 페이지에 공통으로 들어간느 스타일 (header/footer) */
html, body {
  /*브라우저사이즈가 작아졌을때 배경이 안잘리게 하는테그,(가로스크롤이 생성되었을때 배경이 않잘리기위해*/
  color: #3d3d3d;
  line-height: 1.5;
  /*폰트 적용 우선순위
    만약에 웹폰트가 지원되지 않으면 그 다음에 선언된 폰트가 적용됨
    apple sd gothic- 아이폰에서 지원하는 폰트*/
  font-family: "Noto Sans KR", "NanumGothic", "Malgun Gothic", "Apple SD Gothic", "Apple SD Gothic Neo", "Dotum", sans-serif;
  font-size: 16px;
  font-weight: 400;
  /* letter-spacing: -0.05em; */
  word-break: keep-all; /*단어별 줄바꿈*/
}

#wrap { /*id="wrap"*/
  overflow: hidden;
  /*header의 기준점이 되야 헤더가 정확한 위치에 배열이 된다
    윈도우 사이즈가 줄어들었을때 스크린 크기에 따라 헤더가 따라오는게 아니라
    1400이전으로 사이즈가 줄어들면 가로스크롤바가 생기면서 원래 위치인 제일 오른쪽에있는
    컨텐츠가 그자리에 있는다*/
  position: relative;
  min-width: 350px; /*pc에서 부터 최소 넓이를 준다(그래야 320아래로 내려갓을때 가로스크롤이 생긴다)*/
}

/*컨텐츠의 넓이를 제한하고 홈페이지를 브라우저 가운데에 배치*/
.wrapper {
  width: 100%;
  max-width: 1440px;
  padding: 0 20px;
  margin: 0 auto;
  /*1400px 이하부터 320px 까지 모든 사이즈 반응형
    1400px 일때에도 좌우에 여백은 유지해야함(1400이상에서 1400px 이하로 변경되는 점 - 반응형으로 전환되는점)
    부드럽게 여백을 유지하면서 전환해야함
    원래 좌우에 여백이 20px씩 들어가 있는 걸로 스타일을 줌(모바일에서 처럼 20기본으로 좌우에)
    1400px 컨텐츠 영역인데 왼쪽20 + 오른쪽20 = 1440px이 넓이 
    padding으로 좌우에 여백을 20px씩 줌*/
}

@media screen and (max-width: 1000px) {
  html, body {
    font-size: 13px;
  }
}
@media screen and (max-width: 640px) {
  /*640px 이하의 디바이스에서만 아래 css가 적용된다*/
  /*pc에서는 1280px 이라는 콘텐츠 고정넓이가 존재했지만
    모바일에서는 디바이스 넓이에 맞춰서 꽉차게 구현
    구현방식이 달라서 고정값을 모두 삭제*/
  html, body {
    /*모바일기기가 전부 달라서 고정된값을 풀어주고 내부요소가 존재하는 만큼*/
    font-size: 13px;
  }
  .wrapper {
    width: auto;
    margin: 0; /*pc에서부터 패딩을 20 을줘서 모바일에서는 안줘도 된다*/
  }
} /*media 종료*/
.clearfix::after {
  display: block;
  clear: both;
  content: ".";
  visibility: hidden;
  height: 0;
}

.clearfix {
  display: block;
}

/* wrapper와 동일한 사이즈를 가진 position:relative 를 요소는 cnt_wrap를 줘서 항상 부름*/
.cnt_wrap {
  position: relative;
}

.skip_nav {
  position: absolute;
  left: 0;
  top: 0;
  z-index: 1000000; /*제일높은 그무엇보다 제일많은값을준다*/
  width: 100%;
}

.skip_nav a {
  position: absolute;
  left: 0;
  top: -10000px; /*tap키로 이동할때만 보인다 그냥은 안보인다*/
  width: 100%;
  height: 40px;
  line-height: 40px;
  background-color: #0051A7;
  color: #fff;
  text-align: center;
}

.skip_nav a:focus {
  top: 0; /*tap키로 이동할때만 보인다 그냥은 안보인다*/
}

/* 브라우저에서 글자를 드래그 했을때 드래그한 영역의 색과 글자색
   -moz-, -webkit- 이 앞에 붙은 속성은 표준화 되지 않은 속성*/
::-moz-selection {
  background: #6E4029;
  color: #fff;
}
::selection {
  background: #6E4029;
  color: #fff;
}

::-moz-selection {
  background: #6E4029;
  color: #fff;
}

::-webkit-selection {
  background: #6E4029;
  color: #fff;
}

/*
    scss 내에서 import할 default와 common 등의 파일은 
    파일명 앞에 _(언더바)를 입력하면 sass 컴파일러가 해당 파일은 컴파일 하지않음
    main.css나 sub.css 에서 deafult,common 을 필요에 따라서 import 해서 사용하면 됨
*/
.visual {
  position: relative;
}
.visual .tit {
  position: absolute;
  left: calc(50% - 700px);
  /*컨텐츠영역 왼쪽에맞게 글자가 배치된다(글자가 가운데 배치되면 그냥 50%만주면됨)*/
  top: 50%;
  z-index: 10;
  color: #fff;
  transform: translate(0, -50%); /*컨텐츠 영역 위아래 가운데 배치*/
}
.visual .tit strong {
  display: block;
  font-size: 20px;
  line-height: 1.2;
}
.visual .tit h2 {
  font-family: "Noto Serif KR", serif;
  /* mixin으로 선언한 font_serif스타일을 불러오는 명령
     @mixin font_serif로 선언된 스타일이 그대로 이안에 들어오는것
     단, 무조건 @minxin 이 @include 보다 먼저 선언되어 있어야함*/
  font-size: 60px;
  line-height: 1.2;
}
.visual .popup { /* .visual .popup */
  height: 100vh;
}
.visual .popup .btn_wrap {
  position: absolute;
  left: calc(50% - 700px);
  /*.visual .tit 과 같은값을 줌*/
  top: calc(50% + 150px); /*글자 맨꼭대기부터 버튼이있는곳까지*/
  z-index: 10;
}
.visual .popup .btn_wrap .btn_paging span {
  opacity: 0.4;
  width: 50px;
  height: 5px;
  margin: 0 10px 0 0;
  background-color: #fff;
  border-radius: 0;
  /* li:last-child 의 경우 아래와 같이 "&"로 표기
      li{
          &:last-child{ }
      }
  */
}
.visual .popup .btn_wrap .btn_paging span.swiper-pagination-bullet-active {
  opacity: 1;
}